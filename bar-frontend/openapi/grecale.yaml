openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8081/api/v1
    description: Generated server url
paths:
  /api/v1/items/{id}:
    get:
      tags:
        - item-controller
      operationId: findById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successfully retrieve entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDto'
    put:
      tags:
        - item-controller
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemDto'
      responses:
        '200':
          description: Successfully updated entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDto'
    delete:
      tags:
        - item-controller
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successfully delete entity
          content:
            application/json:
              schema:
                type: string
  /api/v1/category/{id}:
    get:
      tags:
        - category-controller
      operationId: findById_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successfully retrieve entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDto'
    put:
      tags:
        - category-controller
      operationId: update_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryDto'
      responses:
        '200':
          description: Successfully updated entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDto'
    delete:
      tags:
        - category-controller
      operationId: delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successfully delete entity
          content:
            application/json:
              schema:
                type: string
  /api/v1/items:
    post:
      tags:
        - item-controller
      operationId: add
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemDto'
      responses:
        '201':
          description: Successfully created entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDto'
  /api/v1/category:
    post:
      tags:
        - category-controller
      operationId: add_1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryDto'
      responses:
        '201':
          description: Successfully created entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDto'
  /api/v1/items/all:
    get:
      tags:
        - item-controller
      operationId: findAll
      responses:
        '200':
          description: Successfully retrieve list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemDto'
  /api/v1/category/all:
    get:
      tags:
        - category-controller
      operationId: findAll_1
      responses:
        '200':
          description: Successfully retrieve list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryDto'
components:
  schemas:
    CategoryDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        lastModifiedBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedDate:
          type: string
          format: date-time
        code:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - FOOD
            - COCKTAIL
            - WINE
            - BEER
            - SPIRIT
            - NON_ALCOHOLIC
        iconUrl:
          type: string
    ItemDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdBy:
          type: string
        lastModifiedBy:
          type: string
        createdDate:
          type: string
          format: date-time
        lastModifiedDate:
          type: string
          format: date-time
        name:
          type: string
        description:
          type: string
        price:
          type: number
        photoUrl:
          type: string
        tag:
          $ref: '#/components/schemas/ItemTagDto'
        category:
          $ref: '#/components/schemas/CategoryDto'
    ItemTagDto:
      type: object
      properties:
        label:
          type: string
        cssClass:
          type: string
